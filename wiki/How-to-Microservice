# Workflow for Implementing Micro-Services with jHipster and JDL
## Preconditions
What needs to be installed and how?
- git, Docker (for KexCloak), IntelliJ, VSCode
- JDK 11 (OpenJDK or https://adoptopenjdk.net/)
- NodeJS LTS
- KeyCloak:
    - We use keycloak as authentication provider.
    To use keycloak in a Docker container, the host name keycloak must point to localhost.
    Append `127.0.0.1 keycloak` to
    UNIX: `/etc/hosts`
    Windows: `%windir%\system32\drivers\etc\HOSTS`
    
- jHipster-Generator
    -  Via NPM:
        ```bash
        npm install -g generator-jhipster
        ```
    - Alternatively with Docker:
        ```
        docker container run --name jhpster_generator -v $(pwd):/home/jhipster/app -v ~/.m2:/home/jhipster/.m2 -p 8080:8080 -p 9000:9000 -p 3001:3001 -it --rm jhipster/jhipster:v6.10.5 bash
        ```
        
## Setting up jHipster and JDL (?)
Where to change config files? --> eher danach sinnvoll, wenn geänderte files überschriebn wurden o.ä.

## Steps for Creating a Micro-Service
1. Clone Repositories and Download irtrex.jdl from Gir
- Backend (Recommendatio: Create new folder Backend and clone all Repositories in there):
    - git@github.com:IT-REX-Platform/Gateway.git
    - git@github.com:IT-REX-Platform/["AllMicroservices"] (e.g.IT-REX-Platform/CourseService.git)
- Frontend: git@github.com:IT-REX-Platform/Frontend.git
- it-rex.jdl (Recommendation: Store file in Backend-Folder):  git@github.com:IT-REX-Platform/Wiki/wiki/resource/it-rex.jdl 

2. Change JDL: Add your Microservice in it-rex.jdl (Code Example here). 
    Use existing Microservices as Orientation and add the following in the same way as them:
    add new application config
    add the necessary entities and relationships

3. Goto Backendfolder in cmd (the folder where all the repsitories are located).  Setup a folder structure with existing microservices:
    -  execute the jdl and generate the services with jhipster import-jdl it-rex.jdl
    -  discard changes in every project except for the newly generated one and the Gateway (to avoid overriding important changes done by others). Discard Changes: Git command (git reset o.ä.)
4. In the new service add the package “_written” under "src/main/java/de.uni_stuttgart.it_rex.mynewmicroservice (MicroService folder was generated by jHipster)








